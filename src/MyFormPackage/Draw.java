/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Draw.java
 *
 * Created on Dec 6, 2014, 11:30:14 PM
 */
package MyFormPackage;

import MyTools.CheckInput;
import MyTools.Tools;
import Mydata.DataSizeClasses;
import Mydata.GrammerProperties;
import java.awt.Graphics;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.JOptionPane;

/**
 *
 * @author ali
 */
public class Draw extends javax.swing.JFrame {

    /**
     * Graphics g:ساختن نمونه از کلاس گرافیک
     */
    Graphics g;
    /**
     * n:تعداد متغیر گرامر
     */
    int numberOfVar = 0;
    /**
     * n:تعداد الفبا گرامر
     */
    int numberOfAleph = 0;
    /**
     * v:محل ذخیره ساری متغیر های گرامر
     */
    String[] Varible;
    /**
     * a:محل ذخیره سازی الفبا های گرامر
     */
    String[] Aleph;
    /**
     * v:ذخیره گرامر در آرایه
     */
    String[][] nfaArray;
    /**
     * list2:محل ذخیره سازی گرامر
     */
    static ArrayList<GrammerProperties> list2;
    String[] StateFinal;

    /** Creates new form Draw */
    public Draw(ArrayList<GrammerProperties> list, String[] stateFinal) {

        initComponents();

        g = jPanelDraw.getGraphics();

        jTextArea1.setEditable(false);

        Tools.setFormLocation(this);

        StateFinal = new String[stateFinal.length];
        for (int j = 0; j < stateFinal.length; j++) {
            StateFinal[j] = stateFinal[j];
        }

        DataSizeClasses copyList = new DataSizeClasses();

        list2 = new ArrayList<GrammerProperties>(list.size());
        /**
         * this instructions jobs is copy list to list2
         */
        copyList.copyToList(list, list2);



        DataSizeClasses setSize = new DataSizeClasses();

        numberOfVar = setSize.getNumberOfVarible(list2);

        Varible = new String[numberOfVar];

        copyList.copyToList(list, list2);

        setSize.getResiveVarible(list2, Varible);

        numberOfAleph = setSize.getNumberOfAlephba(list2);

        Aleph = new String[numberOfAleph];

        //**********************************
        copyList.copyToList(list, list2);
        setSize.getResiveAlephba(list2, Aleph);
        Arrays.sort(Aleph);

        //***********************************
        nfaArray = new String[numberOfVar + 1][numberOfAleph + 1];
        for (int col = 0; col <= numberOfAleph; col++) {
            for (int row = 0; row <= numberOfVar; row++) {
                nfaArray[row][col] = "#";
            }
        }


        for (int row = 1, z = 0; row <= numberOfVar; row++, z++) {
            nfaArray[row][0] = Varible[z];
        }
        for (int col = 1, z = 0; col <= numberOfAleph; col++, z++) {
            nfaArray[0][col] = Aleph[z];
        }

        Collections.sort(list, new Comparator<GrammerProperties>() {
//            public int compare(GrammerProperties o1) {
//                return o1.getLeftValue().compareTo(Vars[0]);
//            }

            public int compare(GrammerProperties o1, GrammerProperties o2) {
                return o1.getLeftValue().compareTo(o2.getLeftValue());
            }
        });
        //this:پر کردن خانه های آرایه با اطلاعات مناسب
        for (int j = 1, k = 0; j <= numberOfVar; j++) {
            for (k = 0; k < list.size(); k++) {
                if (nfaArray[j][0].compareTo(list.get(k).getLeftValue()) == 0) {
                    for (int a = 1; a <= numberOfAleph; a++) {
                        if (list.get(k).getAlephba().compareTo(nfaArray[0][a]) == 0) {
                            nfaArray[j][a] = list.get(k).getRightValue();
                        }

                    } //end for
                }//end if
            }//end for
        }//end for
        //this: چاپ
        for (int j = 0; j <= numberOfVar; j++) {
            jTextArea1.append("\n");
            for (int k = 0; k <= numberOfAleph; k++) {
                jTextArea1.append(nfaArray[j][k] + "  ");
            }
        }

    }//end constructor

    private Draw(ArrayList<GrammerProperties> list2) {
        //throw new UnsupportedOperationException("Not yet implemented");
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jtxtStr = new javax.swing.JTextField();
        jbtnCheckStr = new javax.swing.JButton();
        jPanelDraw = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jbtnNewGrammer = new javax.swing.JButton();
        jbtbExit = new javax.swing.JButton();
        jbtnDrawNFA = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel4.setText("رشته خود را وارد کنید.");

        jbtnCheckStr.setText("بررسی رشته");
        jbtnCheckStr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCheckStrActionPerformed(evt);
            }
        });

        jPanelDraw.setBackground(new java.awt.Color(255, 255, 255));
        jPanelDraw.setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/paykan.gif"))); // NOI18N
        jPanelDraw.add(jLabel1);
        jLabel1.setBounds(10, 120, 24, 11);

        jbtnNewGrammer.setText("در یافت گرامر جدید");
        jbtnNewGrammer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnNewGrammerActionPerformed(evt);
            }
        });

        jbtbExit.setText("خروج");
        jbtbExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtbExitActionPerformed(evt);
            }
        });

        jbtnDrawNFA.setText("رسم NFA");
        jbtnDrawNFA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDrawNFAActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelDraw, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 257, Short.MAX_VALUE)
                .addComponent(jbtnDrawNFA)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addComponent(jbtnCheckStr, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jtxtStr, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(jbtbExit, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnNewGrammer)
                .addContainerGap(177, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnDrawNFA)
                        .addGap(31, 31, 31)))
                .addComponent(jPanelDraw, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtxtStr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnCheckStr))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtnNewGrammer)
                    .addComponent(jbtbExit))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * this button jobs is create dfa to chech string
     * @param evt
     */
    private void jbtnCheckStrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCheckStrActionPerformed
        /**
         * <b>str</b> is input string
         */
        String strInput = jtxtStr.getText().toString();
        strInput = strInput.trim();
        MyTools.CheckInput check = new CheckInput();
        if (check.CheckAlephba(strInput) == false && strInput != null) {
            JOptionPane.showMessageDialog(null, "رشته باید حروف الفبا کوچک باشد.", "خطا", JOptionPane.ERROR_MESSAGE);
            jtxtStr.setText(" ");
        } else {
            DataSizeClasses ds = new DataSizeClasses();


            String str = strInput;

            String nextState = nfaArray[1][1];

            int row = 1;
            int col = 1;
            boolean endAleph = false;
            boolean pruduc = true;
            boolean endCheck = true;
            while (endCheck) {
                if (col == numberOfAleph) {
                    nextState = nfaArray[row][col];
                    endAleph = true;
                }
                if (str.startsWith(nfaArray[0][col])) {
                    str = str.substring((nfaArray[0][col].length()));

                    str = str.trim();

                    if (str.length() == 0) {
                        str = null;
                    }
                    if (str == null) {
                        if (ds.isFinal(StateFinal, nextState)) {
                            pruduc = true;
                            endAleph=false;
                        } else {
                            pruduc = false;
                        }

                        endCheck = false;
                    }//end if(str==null)
                    else {

                        for (int j = 1; j <= numberOfVar; j++) {
                            if (nfaArray[j][0].compareTo(nextState) == 0) {
                                row = j;
                                j = numberOfVar * 10;
                            }
                        }
                            nextState = nfaArray[row][0];
                            col = 1;

                       
                    }//end if(str.startsWith(nfaArray[0][col]))
                } else {
                    if (col < numberOfAleph) {
                        col++;
                        nextState = nfaArray[row][col];
                    }
                }
                if (endAleph) {
                    endCheck = false;
                    pruduc = false;
                }
            }//end while

            if (pruduc) {
                JOptionPane.showMessageDialog(null,"  رشته  "+strInput+" توسط این گرامر تولید می شود. ", "نتیجه بررسی رشته", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null,"  رشته  "+strInput+"  توسط این گرامر تولید نمی شود. ", "نتیجه بررسی رشته", JOptionPane.ERROR_MESSAGE);
            }

        }// if(ceck.CheckAlephba(strInput)==false)

        jtxtStr.setText(null);
    }//GEN-LAST:event_jbtnCheckStrActionPerformed
    /**
     *
     * @param evt
     */
    private void jbtbExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtbExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);

    }//GEN-LAST:event_jbtbExitActionPerformed
    /**
     * count is index for arrayList
     * @param evt
     */
    int count = 0;
    int x = 30, y = 110;
    int w = 30, h = 30;
    private void jbtnDrawNFAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDrawNFAActionPerformed
        GrammerProperties Gramer;
        /**
         * int numberVarible is counter number of varible
         */
        Gramer =
                list2.get(count);
        String firstState = Gramer.getLeftValue();
        String alephba = Gramer.getAlephba();
        String RightValue = Gramer.getRightValue();
        boolean Finalstate = true;//Gramer.isStatefinal();

        g.drawOval(x, y, w, h);
        g.drawString(firstState, x + 10, y + (h / 2) + 3);

        if (Finalstate) {
            g.drawOval(x + 3, y + 2, w - 5, h - 5);
        }

        if (firstState.compareTo(RightValue) == 0) {
            g.drawArc(x + 5, y - (h / 2), w - 10, h + 25, 0, 180);
            g.drawString(alephba, x + 5, y - (h / 2));
        } else {
            x += 20;
            y +=
                    40;
            g.drawArc(x, y, w, h, 0, 360);
            g.drawArc(x - 10, y - 20, w - 10, h + 30, 0, 180);
        }

        count++;
        for (int k = count; k <
                list2.size(); k++) {
        }
    }//GEN-LAST:event_jbtnDrawNFAActionPerformed

    private void jbtnNewGrammerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnNewGrammerActionPerformed
        MainFrame fm = new MainFrame();
        this.setVisible(false);
        fm.setVisible(true);
    }//GEN-LAST:event_jbtnNewGrammerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Draw(list2).setVisible(true);

            }
        });

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanelDraw;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton jbtbExit;
    private javax.swing.JButton jbtnCheckStr;
    private javax.swing.JButton jbtnDrawNFA;
    private javax.swing.JButton jbtnNewGrammer;
    private javax.swing.JTextField jtxtStr;
    // End of variables declaration//GEN-END:variables
}
